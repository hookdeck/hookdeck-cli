env:
  - GO111MODULE=on
before:
  hooks:
    - go mod download
    - go generate ./...
project_name: hookdeck
builds:
  - id: hookdeck-darwin
    ldflags:
      - -s -w -X github.com/hookdeck/hookdeck-cli/pkg/version.Version={{.Version}}
    binary: hookdeck
    env:
      - CGO_ENABLED=1
    main: ./main.go
    goos:
      - darwin
    goarch:
      - amd64
  - id: hookdeck-darwin-arm
    ldflags:
      - -s -w -X github.com/hookdeck/hookdeck-cli/pkg/version.Version={{.Version}}
    binary: hookdeck
    main: ./main.go
    goos:
      - darwin
    goarch:
      - arm64
archives:
  - replacements:
      darwin: mac-os
      amd64: x86_64
    files:
      - none*
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
checksum:
  name_template: "{{ .ProjectName }}-checksums.txt"
snapshot:
  name_template: "{{ .Tag }}-next"
brews:
  - tap:
      owner: hookdeck
      name: homebrew-hookdeck
    commit_author:
      name: hookdeck
      email: support@hookdeck.com
    homepage: https://hookdeck.com
    description: Hookdeck CLI utility
    install: |
      bin.install "hookdeck"
      rm Dir["#{bin}/{hookdeck-completion.bash,hookdeck-completion.zsh}"]
      system bin/"hookdeck", "completion", "--shell", "bash"
      system bin/"hookdeck", "completion", "--shell", "zsh"
      bash_completion.install "hookdeck-completion.bash"
      zsh_completion.install "hookdeck-completion.zsh"
      (zsh_completion/"_hookdeck").write <<~EOS
        #compdef hookdeck
        _hookdeck () {
          local e
          e=$(dirname ${funcsourcetrace[1]%:*})/hookdeck-completion.zsh
          if [[ -f $e ]]; then source $e; fi
        }
      EOS
    caveats: "❤ Thanks for installing the Hookdeck CLI! If this is your first time using the CLI, be sure to run `hookdeck login` first."
